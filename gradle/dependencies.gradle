ext.gradleVersion = "5.1"
ext.hamcrestVersion = "1.3"
ext.httpVersion = "4.5.3"
ext.http4kVersion = "3.107.0"
ext.jacksonVersion = "2.9.7"
ext.jettyVersion = "9.4.7.v20170914"
ext.jmockVersion = "2.8.2"
ext.jvmVersion = "1.8"
ext.slf4jVersion = "1.7.25"
ext.kotlinVersion = "1.3.20"
ext.pwgIntegrationSchemaVersion = "3.0.0"

ext.libraries = [
        "c3p0"                    : "com.mchange:c3p0:0.9.5.2",
        "http-client"             : "org.apache.httpcomponents:fluent-hc:${httpVersion}",
        "http-client-test"        : "org.apache.httpcomponents:httpclient:${httpVersion}:tests",
        "http-mime"               : "org.apache.httpcomponents:httpmime:${httpVersion}",
        "http4k"                  : "org.http4k:http4k-core:${http4kVersion}",
        "http4k-client"           : "org.http4k:http4k-client-apache:$http4kVersion",
        "http4k-jetty"            : "org.http4k:http4k-server-jetty:${http4kVersion}",
        "http4k-testing-hamkrest" : "org.http4k:http4k-testing-hamkrest:${http4kVersion}",
        "http4k-multipart"        : "org.http4k:http4k-multipart:${http4kVersion}",
        "itext"                   : "com.itextpdf:itextpdf:5.5.8",
        "jackson"                 : "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
        "jooq"                    : "org.jooq:jooq:3.11.7",
        "junit"                   : "junit:junit:4.12",
        // Note: Version of Kotlin libraries is defined by `kotlin-gradle` plug-in.
        "kotlin"                  : "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}",
        "kotlin-argparser"        : "com.xenomachina:kotlin-argparser:2.0.7",
        "kotlin-reflect"          : "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}",
        "kotlinx-coroutines"      : "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.1",
        "kotlinx-html"            : "org.jetbrains.kotlinx:kotlinx-html-jvm:0.6.8",
        "krouton"                 : "com.natpryce:krouton:2.3.1.2",
        "logback"                 : "ch.qos.logback:logback-classic:1.2.2",
        "postgresql"              : "org.postgresql:postgresql:42.2.2",
        "redis"                   : "biz.paluch.redis:lettuce:4.3.3.Final",
        "slf4j"                   : "org.slf4j:slf4j-simple:${slf4jVersion}",
        "slf4j-api"               : "org.slf4j:slf4j-api:${slf4jVersion}",
        "yaml"                    : "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
        "xmlbuilder"              : "org.redundent:kotlin-xml-builder:1.4",
]

ext {
    apacheHttpClient = [
            libraries["http-client"],
            libraries["http-mime"],
            "org.apache.httpcomponents:httpclient:${httpVersion}",
            "org.apache.httpcomponents:httpcore:4.4.7",
            "commons-codec:commons-codec:1.10",
            "commons-logging:commons-logging:1.2"
    ]

    awsS3 = [
            libraries["aws-s3"],
            "com.amazonaws:aws-java-sdk-core:1.11.176"
    ]

    fileUpload = [
            libraries["commons-fileupload"],
            "commons-io:commons-io:2.5"
    ]

    http4k = [
            libraries["http4k"],
            libraries["http4k-client"],
            libraries["http4k-jetty"],
            libraries["http4k-multipart"],
            libraries["krouton"]
    ]

    jacksonJson = [
            libraries["jackson"],
            "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}",
            "com.fasterxml.jackson.core:jackson-annotations:${jacksonVersion}"
    ]

    jacksonYaml = [
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:${jacksonVersion}",
            "org.yaml:snakeyaml:1.18"
    ]

    javaMail = [
            libraries["javamail"],
            "javax.activation:activation:1.1"
    ]

    jettyServer = [
            "org.eclipse.jetty:jetty-server:${jettyVersion}",
            "org.eclipse.jetty:jetty-http:${jettyVersion}",
            "org.eclipse.jetty:jetty-io:${jettyVersion}",
            "org.eclipse.jetty:jetty-util:${jettyVersion}",
            "org.eclipse.jetty:jetty-security:${jettyVersion}",
            "org.eclipse.jetty:jetty-servlet:${jettyVersion}",
            "javax.servlet:javax.servlet-api:4.0.0"
    ]

    jsonSchema = [
            "com.github.fge:btf:1.2",
            "com.github.fge:jackson-coreutils:1.8",
            "com.github.fge:json-schema-core:1.2.5",
            "com.github.fge:msg-simple:1.1",
            "com.github.fge:uri-template:0.9",
            "com.googlecode.libphonenumber:libphonenumber:6.2",
            "joda-time:joda-time:2.8.1",
            "org.mozilla:rhino:1.7R4",
            libraries["javamail-api"],
            libraries["json-schema-validator"],
            libraries["pwg-integration-schema"]
    ]

    kotlin = [
            libraries["kotlin"],
            "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion",
            "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
    ]

    kotlinReflect = [
            libraries["kotlin-reflect"]
    ]

    loggingSupport = [
            libraries["slf4j-api"],
            libraries["logback"],
            libraries["logstash-logback-encoder"],
            "ch.qos.logback:logback-core:1.2.2"
    ]

    monitoringSupport =
            loggingSupport + kotlinReflect + [libraries["newrelic-api"]]

    postgres = [
            libraries["c3p0"],
            "com.mchange:mchange-commons-java:0.2.11",
            libraries["jooq"],
            libraries["postgresql"]
    ]

    redis = [
            libraries["redis"],
            "io.netty:netty-all:4.1.13.Final",
            "io.reactivex:rxjava:1.2.10"
    ]

    testingSupport = [
            "org.hamcrest:hamcrest-core:1.3",
            "org.hamcrest:hamcrest-library:1.3",
            libraries["hamkrest"],
            libraries["http4k-testing-hamkrest"],
            libraries["javax.json"],
            libraries["jmock"],
            libraries["jmock-junit"],
            libraries["junit"],
            libraries["okeydoke"],
            libraries["snodge"]
    ]

    httpServer = http4k + jettyServer + [
            libraries["konfig"]
    ]
}
